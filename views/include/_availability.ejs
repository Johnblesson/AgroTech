<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Availability</title>
  <link rel="stylesheet" href="./css/users.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
  <link rel="shortcut icon" href="./favicon.svg" type="image/svg+xml">
</head>
<style>
    .storage-info {
        text-align: center;
        margin-top: 20px;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }
  
    .role-pink-bg {
        background-color: pink;
    }
  
    .role-green-bg {
        background-color: rgb(249, 233, 7);
    }
  
    .status-red-bg {
        background-color: rgb(255, 5, 5);
    }
  
    .status-green-bg {
        background-color: rgb(7, 252, 85);
    }
  
    .availabilty-blue-bg {
        background-color: rgb(7, 207, 252);
    }
  
    .availabilty-grey-bg {
        background-color: rgb(162, 159, 159);
    }
  
    /* Center the button */
    .center-button {
        display: flex;
        justify-content: center;
        margin-top: 20px;
    }
  
    .hover:hover {
        background-color: #c6195e;
        content: attr(Non-functional);
        color: #ffffff;
    }
  
    /* Make the table container full width */
    .table-container {
        width: 100%;
        overflow-x: auto;
    }
  
    /* Adjust table width */
    table {
        width: 100%;
        border-collapse: collapse;
    }
  
    /* Adjust table cell padding */
    th,
    td {
        padding: 8px;
        text-align: left;
    }
  
    /* Merged styles from inline */
    .main {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100vh;
    }


    .search-container {
        display: flex;
        justify-content: space-between;
        margin-bottom: 20px;
    }

    .search-container div {
    flex: 1;
    margin-right: 10px;
}

    .search-container input[type=text] {
        padding: 10px;
        margin-right: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        box-sizing: border-box;
        width: calc(100% - 70px); /* Adjust width to leave space for the button */
    }

    .search-container button {
        padding: 10px;
        border: none;
        border-radius: 5px;
        background-color: #4CAF50; /* Green background */
        color: white;
        cursor: pointer;
        width: 60px;
    }

    .search-container button:hover {
        background-color: #45a049;
    }
  </style>
<body>
    <h2> Availability</h2>
    <div class="table-wrapper">
        
<!-- Search by PID -->
<div class="search-container">
    <input type="text" id="searchPidInput" placeholder="Search by PID..." onkeyup="searchProducts('pid')">
    <button onclick="clearSearch('pid')">Clear</button>
</div>

<!-- Search by Location -->
<div class="search-container">
    <input type="text" id="searchLocationInput" placeholder="Search by Location..." onkeyup="searchProducts('location')">
    <button onclick="clearSearch('location')">Clear</button>
</div>

<!-- Search by Availability -->
<div class="search-container">
    <input type="text" id="searchAvailabilityInput" placeholder="Search by Availability..." onkeyup="searchProducts('availability')">
    <button onclick="clearSearch('availability')">Clear</button>
</div>

        <% if (products.length > 0) { %> <!-- Check if there are products to display -->
        <table class="fl-table">
            <thead>
            <tr>
                <th>#</th>
                <th>PID</th>
                <th>Created by</th>
                <th>Product Name</th>                 
                <th>Phone No.</th>
                <th>Location</th>
                <th>Region</th>
                <th>Availability</th>
                <th>Actions</th> <!-- New column for actions -->
            </tr>
            </thead>
            <tbody>
                <% let counter = 1; %> <!-- Counter for numbering the products -->
                <% products.forEach(product => { %>
                  <tr>
                    <td class="hover"><%= counter++ %></td> <!-- Increment the counter -->
                    <td class="hover"><%= 'PID' + product.pid %></td>
                    <td class="hover"><%= product.createdBy %></td>
                    <td class="hover">
                      <% if (product.title && product.title.length > 20) { %>
                        <%= product.title.substring(0, 20) + "..." %>
                      <% } else { %>
                        <%= product.title %>
                      <% } %>
                    </td>
                    <td class="hover"><%= product.phone %></td>
                    <td class="hover"><%= product.location %></td>
                    <td class="hover"><%= product.region %></td>
                    <td class="hover availabilty-blue-bg"><%= product.availability %></td>
                    <td class="hover px-6 py-4 whitespace-nowrap">
                      <a href="/edit-availability/<%= product._id %>"><i class="fas fa-edit text-green-500 cursor-pointer"></i></a>
                      <a href="#" onclick="deleteProductById('<%= product._id %>')"><i class="fas fa-trash-alt text-red-500 cursor-pointer"></i></a>
                      <a href="/view-product-details/<%= product._id %>"><i class="fas fa-eye text-blue-500 cursor-pointer mx-2"></i></a>
                    </td>
                  </tr>
                <% }); %>
              </tbody>              
        </table>
        <% } else { %> <!-- If there are no products -->
            <div class="storage-info role-pink-bg">
                <p>No products available</p>
            </div>
        <% } %>

         <!-- pagination -->
        <div class="container mx-auto">
            <div class="pagination">
            <% for (let i = 1; i <= totalPages; i++) { %>
                <a href="?page=<%= i %>" class="<%= i === currentPage ? 'active' : '' %>">
                    <%= i %>
                </a>
            <% } %>
        </div>
  </div>
    </div>
</body>
<script>
    // Delete function
    function deleteProductById(username) {
        if (confirm('Are you sure you want to delete this user?')) {
            // Redirect to the delete route with the storage ID
            window.location.href = "/delete-products/" + username + "?_method=DELETE";
        }
    }
   </script>

<script>
    function searchProducts(searchType) {
        var input, filter, table, tr, td, i, txtValue;
        
        // Determine which input field to use based on searchType
        switch (searchType) {
            case 'pid':
                input = document.getElementById("searchPidInput");
                break;
            case 'location':
                input = document.getElementById("searchLocationInput");
                break;
            case 'availability':
                input = document.getElementById("searchAvailabilityInput");
                break;
        }
        
        filter = input.value.toUpperCase();
        table = document.getElementsByClassName("fl-table")[0]; // Assuming only one table
        tr = table.getElementsByTagName("tr");

        // Loop through all table rows, and hide those who don't match the search query
        for (i = 0; i < tr.length; i++) {
            // Determine which column to search based on searchType
            switch (searchType) {
                case 'pid':
                    td = tr[i].getElementsByTagName("td")[0]; // Assuming pID is the first column
                    break;
                case 'location':
                    td = tr[i].getElementsByTagName("td")[4]; // Assuming Location is the fifth column
                    break;
                case 'availability':
                    td = tr[i].getElementsByTagName("td")[6]; // Assuming Availability is the seventh column
                    break;
            }
            
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }

    function clearSearch(searchType) {
        var input;
        
        // Determine which input field to clear based on searchType
        switch (searchType) {
            case 'pid':
                input = document.getElementById("searchPidInput");
                break;
            case 'location':
                input = document.getElementById("searchLocationInput");
                break;
            case 'availability':
                input = document.getElementById("searchAvailabilityInput");
                break;
        }
        
        input.value = "";
        searchProducts(searchType);
    }
</script>
</html>